process Zefficiency  = 
{

# initialize  MessageLogger
# include "FWCore/MessageService/data/MessageLogger.cfi"
# replace MessageLogger.cout.threshold = "ERROR
# replace MessageLogger.cerr.default.limit = 10




##################################################
#
# generate events on the fly - remember to activate 'ZIntoElectronsEnventProducer' in the path
service = RandomNumberGeneratorService
 {
    untracked uint32 sourceSeed = 123456789
   PSet moduleSeeds =
   { 
      untracked uint32 VtxSmeared = 98765432
      untracked uint32 g4SimHits = 11
      untracked uint32 mix = 12345
   }
 }

include "ZShape/EffAcc/data/PythiaZee.cfg"
   replace maxEvents.input = 40
   replace PythiaSource.pythiaPylistVerbosity = 1
   replace PythiaSource.maxEventsToPrint = 1
    

include "ZShape/EffAcc/data/ZEventProducer.cfi"




##################################################
#
# read events pre-generated from file
# source = PoolSource {
#     untracked vstring fileNames={'file:/data/franzoni/cmssw/ph/producerParticles_CMSSW_180_p10/src/ZShape/EffAcc/test/ZeePhytiaEvents.root'}
#}
#untracked PSet maxEvents = {untracked int32 input = -1}





  

module mcEff = ZEfficiencyCalculator {
//	untracked InputTag zsrc = VtxSmeared
	untracked bool quiet = true
	untracked string outHistogramsFile      = "base_Dec6.root" 

# options to turn on statistical smearing
//	untracked int32  estat_trials = 100
//	untracked string estat_eff = "HLT-Eta"
//	untracked string estat_zdef = "Golden-EB-EB"

# options to turn on systematic changes
//	untracked string esys_eff = "HLT-Eta"
//	untracked string esys_eff = "GsfTrack-Eta"
//	untracked string esys_zdef = "Golden-EB-EB"

	untracked VPSet Effs = {
	    {
                untracked string name = "HLT-Eta"
		untracked string effFile = "HLT-Eta.txt"
            },
	    {
                untracked string name = "ElectronId-Eta"
		untracked string effFile = "ElectronId-Eta.txt"
            },
	    {
                untracked string name = "Iso-Pt"
		untracked string effFile = "Iso-Pt.txt"
            },
	    {
                untracked string name = "GsfTrack-Eta"
		untracked string effFile = "GsfTrack-Eta.txt"
            },
	    {
                untracked string name = "ScPlusTrack-Eta"
		untracked string effFile = "ScPlusTrack-Eta.txt"
            },
            {
                untracked string name = "Supercluster-Eta"
		untracked string effFile = "Supercluster-Eta.txt"
            }
	}
	
	untracked bool   writeHistoBeforeEndJob = false
	
	untracked VPSet ZDefs = { 
	    {
		untracked string name="Golden-EB-EB"
		untracked vstring e1 = { "ACC(EB)","PT10","Supercluster-Eta","PT20","ScPlusTrack-Eta",
                                         "GsfTrack-Eta","Iso-Pt","ElectronId-Eta", "HLT-Eta"  }
		untracked vstring e2 = { "ACC(EB)","PT10","Supercluster-Eta","PT20","ScPlusTrackEff-Eta",
                                         "GsfTrack-Eta","Iso-Pt","ElectronId-Eta", "HLT-Eta" }
		untracked vstring Z = { }
	    },
	    {
		untracked string name="Tight-EB-Loose-ECAL"
		untracked vstring e1 = { "ACC(EB)","PT10","Supercluster-Eta","PT20","ScPlusTrack-Eta",
		    "GsfTrack-Eta","Iso-Pt","ElectronId-Eta","HLT-Eta"}
		untracked vstring e2 = { "ACC(ECAL)","PT10","Supercluster-Eta","PT20","ScPlusTrack-Eta",
		    "GsfTrack-Eta","Iso-Pt","ElectronId-Eta"}
		untracked vstring Z = { }
	    },
	    {
		untracked string name="Maximal"
		untracked vstring e1 = { "ACC(ECAL)","PT10","Supercluster-Eta","PT20","ScPlusTrack-Eta",
		    "GsfTrack-Eta","Iso-Pt","ElectronId-Eta","HLT-Eta"}
		untracked vstring e2 = { "ACC(ANY)","PT10"}
		untracked vstring Z = { }
	    }

	}
    }
    

# service = Timing {}
service = TimerService {}
untracked PSet options = {
            untracked bool wantSummary = true        # default is false
  }



path p = {
   # this needs be there if generating events on the fly
   ZIntoElectronsEnventProducer,

   mcEff
}
    
}	
